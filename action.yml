name: 'Build changelog between two revisions'
description: 'Checkout a repository and construct a changelog between specified revisions.'

inputs:
  repository:
    description: 'The repository to checkout.'
    required: true
  from-version:
    description: 'Changes after this revision will be included.'
    required: true
  to-version:
    description: 'Changes up to this revision will be included.'
    required: true
  version-prefix:
    description: 'Value to prepend before versions. Use e.g. if passed values are tags with their "v" prefix missing.'
    required: false
  token:
    description: 'Personal access token (PAT) used to fetch the repository.'
    required: true

outputs:
  changelog:
    description: 'Constructed changelog from the version difference.'
    value: ${{ steps.changelog.outputs.changelog }}
  changed:
    description: 'Indicates whether the versions differ (changelog was built).'
    value: ${{ steps.changed.outputs.changed }}

runs:
  using: "composite"
  steps:
    - name: Set change
      id: changed
      shell: bash
      run: |
        if [ ${{ inputs.from-version }} == ${{ inputs.to-version }} ] ; then
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "changed=true" >> $GITHUB_OUTPUT
        fi

    - name: Checkout target repository with history
      if: ${{ steps.changed.outputs.changed == 'true'  }}
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        path: target-repository
        repository: ${{ inputs.repository }}
        token: ${{ inputs.token }}

    - name: Checkout the target version commit
      if: ${{ steps.changed.outputs.changed == 'true'  }}
      shell: bash
      run: |
        cd target-repository
        git checkout ${{ inputs.version-prefix }}${{ inputs.to-version }}

    # Existing actions usually rely on git tags and don't work with plain revisions.
    # Building a simple changelog explicitly.
    - name: Get Changelog
      if: ${{ steps.changed.outputs.changed == 'true' }}
      id: changelog
      shell: bash
      run: |
        cd target-repository
        
        from=${{ inputs.version-prefix }}${{ inputs.from-version }}
        to=${{ inputs.version-prefix }}${{ inputs.to-version }}

        log=$'## ${{ inputs.repository }}:\n'
        log+=$(git log "${from}..${to}" \
            --pretty=format:"- [%h](http://github.com/${{ inputs.repository }}/commit/%H) - %s (%aN)")

        log="${log//'`'/'\`'}"
        log="${log//'"'/'\"'}"
        log="${log//'%'/'%25'}"

        # Add full repository qualifier to PR references.
        # Changes PR-number strings like '(#100)' into '(owner/repository#100)'.
        log=$(echo "$log" | sed -r 's|\(#([0-9]+)\)|(${{ inputs.repository }}#\1)|g')
        
        # Store multiline changelog in the output.
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "${log}" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Cleanup
      if: ${{ steps.changed.outputs.changed == 'true'  }}
      shell: bash
      run: rm -rf target-repository
